Name: Rikako Ono
PID: A17583780
Date: 8/24/24

1. (1pt) Approximately how long did you spend on this PA?
I spent a few hours across three days on this PA.

2. (2pt) Between Count Sort and Bucket Sort, which did you find easier to complete, and why?
I don't recall either of them being easier in particular. Both of them made me struggle, but were not impossible to figure out based on the resources provided.

3. (1pt) What is the worst-case runtime for Count Sort, in terms of Big-O?
The worst-case runtime for Count Sort is O(n), since (besides the constance range) it only needs time to be sorted into each range value.

4. (2pt) Is Count Sort an iterative sort, a divide-and-conquer sort, or neither? Why?
Count Sort is neither an iterative sort nor a divide-and-conquer sort.
Iterative sorts imply looping through the data to compare and swap values, while divide-and-conquer sort
splits the data itself into smaller subsets and combining the sorted subsets.
Count Sort uses counting to tally the number of occurrences of each distinct element,
which is then used to directly place the elements into the output array;
this neither uses comparisons or dividing the original dataset, implying that Count Sort is neither of these sorting methods.

5. (1pt) What is the worst-case runtime for Bucket Sort, in terms of Big-O?
The worst-case runtime for Bucket Sort is O(n^2), when all items are in one bucket and using a separate sorting algorithm to iterate through all values.

6. (2pt) Is Bucket Sort an iterative sort, a divide-and-conquer sort, or neither? Why?
Bucket Sort is neither an iterative sort nor a divide-and-conquer sort.
For similar reasons as above, it is not iterative sort,
and is also not divide-and-conquer sort since it is grouped into a sorted range rather than random subproblems like in merge sort.

7. (1pt) Did you modify any of the tests in SortsTest.java? Why or why not?
No, because it was not explicitly mentioned and I did not think it was necessary at the time of doing my assignment.